{"version":3,"sources":["api/methods.ts","api/user.api.ts","stores/AuthStore.ts","stores/UserStore.ts","stores/ToastStore.ts","stores/mobxConf.ts","theme/styled.ts","theme/GlobalStyle.ts","components/NavBar.tsx","hooks/useTimeout.ts","components/Toaster.tsx","components/WrappedRoute.tsx","components/AuthHOC.tsx","hooks/useClickOutside.ts","hooks/useScrollLock.ts","elements/Modal.tsx","elements/Spinner.tsx","elements/Button.tsx","modals/ExampleModal.tsx","elements/Dropdown.tsx","elements/Input.tsx","components/ShowcaseComponents.tsx","pages/FrontPage.tsx","pages/LoginPage.tsx","pages/UsersPage.tsx","index.tsx","stores/index.ts","theme/defaultTheme.ts","routes.tsx"],"names":["REACT_APP_API_URL","process","defaultHeaders","Accept","Content-Type","authenticatedHeaders","Authorization","concat","stores","authStore","jwt","token","createRequest","path","options","axios","then","res","data","catch","err","response","Error","message","post","headers","arguments","length","undefined","method","login","credentials","getUsers","get","EMPTY_USER","name","email","EMPTY_JWT","expires","AuthStore","_class","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","createClass","key","loggedInUser","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","_this","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","userApi","sent","runInAction","user","abrupt","stop","_x","apply","_this2","computed","getOwnPropertyDescriptor","UserStore","UserStore_class","UserStore_descriptor","UserStore_descriptor2","UserStore_descriptor3","loading","users","ToastStore","ToastStore_class","ToastStore_descriptor","idCounter","ToastStore_descriptor2","ToastStore_descriptor3","type","duration","newToast","id","toasts","push","filter","t","settings","enforceActions","styledComponents","styled","default","createGlobalStyle","css","keyframes","ThemeProvider","GlobalStyle","_templateObject","theme","font","text","_ref2","NavBar","inject","observer","props","className","history","isAuthenticated","react_default","createElement","NavContainer","MainLinks","Link","to","role","onClick","e","logout","nav","NavBar_templateObject","NavLink","_templateObject2","color","white","_ref3","textDark","_ref4","_ref5","fontSize","medium","_ref6","primary","_ref7","div","_templateObject3","useTimeout","callback","delay","useEffect","setTimeout","clearTimeout","Toast","toast","removeToast","_useState","useState","_useState2","slicedToArray","inProgress","setInProgress","ToastItem","ToastBody","SvgWrapper","size","index_esm","getTypeIcon","SvgAction","Progress","Toaster","toastStore","ToastsList","map","getTypeColor","blue","orange","red","green","span","Toaster_templateObject","button","Toaster_templateObject2","ul","Toaster_templateObject3","li","_templateObject4","_templateObject5","_templateObject6","_ref8","_ref9","WrappedRoute","Component","component","rest","objectWithoutProperties","react","react_router","assign","render","MainWrapper","NavBar_NavBar","Toaster_Toaster","MainContainer","WrappedRoute_templateObject","main","WrappedRoute_templateObject2","AuthHOC","WrappedComponent","AuthHOCClass","_React$Component","possibleConstructorReturn","getPrototypeOf","inherits","value","location","pathname","state","from","React","useClickOutside","ref","onClickOutside","isActive","isListening","setListening","handler","event","el","current","target","HTMLElement","contains","removeHandlers","document","removeEventListener","addEventListener","useScrollLock","htmlElement","querySelector","classList","add","remove","Modal","isOpen","body","aria-modal","aria-hidden","Modal_templateObject","Spinner","StyledSpinner","getSize","borderWidth","height","width","defaultProps","animationRotate","Spinner_templateObject","Spinner_templateObject2","Button","children","disabled","href","Fragment","Button_templateObject","secondary","fullWidth","ExampleModal","handleClose","onClose","useRef","ModalContainer","ExampleModal_SvgAction","ExampleModal_SvgWrapper","src","alt","intent","ExampleModal_templateObject","ExampleModal_templateObject2","ExampleModal_templateObject3","DropdownEl","selected","placeholder","closeMenu","setMenuOpen","selectOption","option","stopPropagation","onSelect","_React$useState","_React$useState2","menuOpen","Dropdown_Button","oldMenuOpen","aria-haspopup","aria-label","Dropdown_SvgWrapper","DropdownList","open","o","Option","tabIndex","required","Dropdown_templateObject","Dropdown_templateObject2","Dropdown_templateObject3","Dropdown_templateObject4","Dropdown","Dropdown_templateObject5","InputEl","handleChange","onChange","icon","iconPadding","onFocus","onBlur","Container","StyledTextarea","StyledInput","Input_templateObject","textarea","Input_templateObject2","input","Input_templateObject3","Input","Input_templateObject4","ShowcaseComponents","selectedOption","setSelectedOption","_useState3","_useState4","modalOpen","setModalOpen","_useState5","_useState6","setText","createToast","ShowcaseComponents_Container","val","ShowcaseComponents_templateObject","FrontPage","_dec","FrontPage_class","_React$PureComponent","FrontPage_Container","privileges","ShowcaseComponents_ShowcaseComponents","PureComponent","FrontPage_templateObject","LoginPage","LoginPage_dec","LoginPage_class","_getPrototypeOf2","_len","args","Array","_key","call","defaultValues","password","handleLoginSubmit","values","logInUser","handleSetDefaultValues","newValues","setState","oldState","objectSpread","ShortcutButtonsContainer","LoginFormEl","onSubmit","setEmail","setPassword","LoginForm","preventDefault","LoginField","htmlFor","md_index_esm","LoginPage_templateObject","form","LoginPage_templateObject2","LoginPage_templateObject3","UsersPage","userStore","UsersPage_dec","UsersPage_class","UsersPage_Container","UsersList","i","UsersListItem","UsersPage_templateObject","UsersPage_templateObject2","UsersPage_templateObject3","__webpack_require__","d","__webpack_exports__","configure","Stores","mobx_react_module","styled_components_browser_esm","bg","gray","grayLight","textLight","yellow","small","large","xlarge","largeIcon","transitions","bezier","react_router_dom","basename","WrappedRoute_WrappedRoute","exact","getElementById"],"mappings":"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","file":"static/js/main.e9ac467f.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios'\n\nimport { stores } from '../index'\n\nconst { REACT_APP_API_URL } = process.env\nexport const defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const authenticatedHeaders = () => ({\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  Authorization: `Bearer ${stores.authStore.jwt.token}`\n})\n\n/**\n * Generates requests using axios since fetch is slightly annoying.\n *\n * Instead of returning Promise<T> whenever there's an error, it throws\n * an Error and computation is stopped inside mobx stores which use this.\n * @param path - The path after the API_URL\n * @param options - Axios options object\n */\nconst createRequest = (path: string, options: any) : Promise<any> => {\n  return axios(`${REACT_APP_API_URL}/${path}`, options)\n    .then(res => res.data)\n    .catch((err: AxiosError) => {\n      if (err.response) {\n        throw new Error(err.response.data.message || err.response.data)\n      }\n      throw err\n    })\n}\n\nexport const get = <T>(path: string, headers = defaultHeaders) : Promise<T> =>\n  createRequest(path, { headers, method: 'GET' })\n\nexport const post = <T>(path: string, data: any, headers = defaultHeaders) : Promise<T> =>\n  createRequest(path, { headers, data, method: 'POST' })\n\nexport const put = <T>(path: string, data: any, headers = defaultHeaders) : Promise<T> =>\n  createRequest(path, { headers, data, method: 'PUT' })\n\nexport const del = <T>(path: string, headers = defaultHeaders) : Promise<T> =>\n  createRequest(path, { headers, method: 'DELETE' })\n","import { IUser, ILoginCredentials, ILoginResponse } from '../types/user'\n\nimport {\n  authenticatedHeaders,\n  get,\n  post\n} from './methods'\n\nexport const login = (credentials: ILoginCredentials) =>\n  post<ILoginResponse>('login', credentials)\n\nexport const getUsers = () =>\n  get<{users: IUser[]}>('users', authenticatedHeaders())\n\nexport const createUser = (payload: any) =>\n  post<IUser>('user', payload, authenticatedHeaders())\n","import { action, computed, runInAction, observable } from 'mobx'\nimport * as userApi from '../api/user.api'\n\nimport { IUser, ILoginCredentials, IJwt } from '../types/user'\n\nconst EMPTY_USER = {\n  name: '',\n  email: '',\n} as IUser\nconst EMPTY_JWT = {\n  expires: -1,\n  token: ''\n} as IJwt\n\nexport class AuthStore {\n  @observable loggedInUser: IUser = EMPTY_USER\n  @observable jwt: IJwt = EMPTY_JWT\n\n  @action\n  logInUser = async (credentials: ILoginCredentials) => {\n    const result = await userApi.login(credentials)\n    runInAction(() => {\n      this.loggedInUser = result.user\n      this.jwt = result.jwt\n    })\n    return result\n  }\n\n  @action\n  logout = () => {\n    this.loggedInUser = EMPTY_USER\n    this.jwt = EMPTY_JWT\n  }\n\n  @computed\n  get isAuthenticated() {\n    return this.loggedInUser.name !== ''\n  }\n}\n","import { action, runInAction, observable } from 'mobx'\nimport * as userApi from '../api/user.api'\n\nimport { IUser } from '../types/user'\n\nexport class UserStore {\n  @observable users: IUser[] = []\n  @observable loading = false\n\n  @action\n  getUsers = async () => {\n    this.loading = true\n    const result = await userApi.getUsers()\n    runInAction(() => {\n      this.users = result.users\n      this.loading = false\n    })\n  }\n}\n","import { action, observable } from 'mobx'\n\nimport { IToast } from '../types/ui'\n\nexport class ToastStore {\n  @observable toasts: IToast[] = []\n  idCounter: number = 0\n\n  @action createToast = (message: string, type: string = 'success', duration: number = 5000) => {\n    const newToast = {\n      id: this.idCounter,\n      message,\n      type,\n      duration\n    }\n    this.idCounter += 1\n    this.toasts.push(newToast)\n  }\n \n  @action removeToast = (id: number) => {\n    this.toasts = this.toasts.filter(t => t.id !== id)\n  }\n}\n","import { configure } from 'mobx'\n\nconst settings = { enforceActions: 'observed' as 'observed' }\n\nexport const confMobx = () => configure(settings)\n","import * as styledComponents from 'styled-components'\n\nimport { ITheme } from '../types/theme'\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<ITheme>\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider }\nexport default styled\n","import { createGlobalStyle } from './styled'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  h1,h2,h3,h4 {\n    font-family: ${({ theme }) => theme.font.text };\n  }\n  * {\n    box-sizing: border-box;\n    font-family: ${({ theme }) => theme.font.text };\n  }\n  ul, ol {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  a, a:visited {\n    color: inherit;\n    text-decoration: none;\n  }\n  html.scroll-lock {\n    overflow: hidden;\n  }\n`\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\n// import { css } from 'styled-components'\nimport styled from '../theme/styled'\n\nimport { AuthStore } from '../stores/AuthStore'\n\nimport { RouteComponentProps } from 'react-router'\n\ninterface IProps extends RouteComponentProps<{}> {\n  className?: string\n  authStore?: AuthStore,\n}\n\nexport const NavBar = inject('authStore')(observer(function NavBar(props: IProps) {\n  function handleLogout(e : React.MouseEvent<HTMLElement>) {\n    authStore!.logout()\n    history.push('')\n  }\n  const { className, authStore, history } = props\n  const { isAuthenticated } = authStore!\n  return (\n    <NavContainer className={className}>\n      <MainLinks>\n        <Link to=\"/\">Front page</Link>\n        <Link to=\"/users\">Users page</Link>\n      </MainLinks>\n      { isAuthenticated ?\n      <Link to=\"#\" role=\"button\" onClick={handleLogout}>Logout</Link> :\n      <Link to=\"/login\">Login</Link>\n      }\n    </NavContainer>\n  )\n}))\n\nconst NavContainer = styled.nav`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem;\n`\nconst Link = styled(NavLink)`\n  background-color: ${({ theme }) => theme.color.white };\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  box-sizing: border-box;\n  color: ${({ theme }) => theme.color.textDark };\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  padding: 1rem;\n  text-decoration: none;\n  &:hover {\n    background-color: ${({ theme }) => theme.color.primary };\n    color: ${({ theme }) => theme.color.white };\n  }\n  transition: 0.2s all;\n`\nconst MainLinks = styled.div`\n  display: flex;\n  ${Link} {\n    margin-right: 1rem;\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n","import { useEffect } from 'react'\n\nfunction useTimeout(callback: () => void, delay: number) {\n  useEffect(() => {\n    if (delay !== null) {\n      let id = setTimeout(callback, delay)\n      return () => clearTimeout(id)\n    }\n    return () => undefined\n  }, [callback, delay])\n}\n\nexport default useTimeout\n","import React, { useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from '../theme/styled'\nimport { FiAlertCircle, FiAlertTriangle, FiCheckCircle, FiXOctagon, FiX } from 'react-icons/fi'\n\nimport useTimeout from '../hooks/useTimeout'\n\nimport { ToastStore } from '../stores/ToastStore'\nimport { ITheme } from '../types/theme'\nimport { IToast } from '../types/ui'\n\ninterface IToastProps {\n  className?: string\n  toast: IToast\n  removeToast: (id: number) => void\n}\nfunction Toast(props: IToastProps) {\n  const { className, toast, removeToast } = props\n  const [inProgress, setInProgress] = useState(false)\n  useTimeout(() => {\n    setInProgress(true)\n  }, 0)\n  useTimeout(() => {\n    removeToast(toast.id)\n  }, toast.duration)\n  return (\n    <ToastItem className={className} type={toast.type}>\n      <ToastBody type={toast.type}>\n        <SvgWrapper className=\"type-icon\">{ getTypeIcon(toast.type) }</SvgWrapper>\n        <p className=\"message\">{ toast.message }</p>\n        <SvgAction className=\"close-icon\"><FiX size={24} onClick={() => removeToast(toast.id)}/></SvgAction>\n      </ToastBody>\n      <Progress type={toast.type} duration={toast.duration} inProgress={inProgress}/>\n    </ToastItem>\n  )\n}\n\ninterface IProps {\n  className?: string\n  toastStore?: ToastStore\n}\nexport const Toaster = inject('toastStore')(observer(function Toaster(props: IProps) {\n  const { className, toastStore } = props\n  return (\n    <ToastsList className={className}>\n      { toastStore!.toasts.map(t =>\n      <Toast key={t.id} toast={t} removeToast={toastStore!.removeToast} />\n      )}\n    </ToastsList>\n  )\n}))\n\nfunction getTypeIcon(type: string, size: number = 24) {\n  switch(type) {\n    case 'info':\n      return <FiAlertCircle size={size} />\n    case 'warning':\n      return <FiAlertTriangle size={size} />\n    case 'error':\n      return <FiXOctagon size={size} />\n    case 'success':\n    default:\n      return <FiCheckCircle size={size} />\n  }\n}\n\nfunction getTypeColor(type: string, theme: ITheme) {\n  switch(type) {\n    case 'info':\n      return theme.color.blue\n    case 'warning':\n      return theme.color.orange\n    case 'error':\n      return theme.color.red\n    case 'success':\n    default:\n      return theme.color.green\n  }\n}\n\nconst SvgWrapper = styled.span`\n  display: flex;\n`\nconst SvgAction = styled.button`\n  background: transparent;\n  border: 0;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  padding: 8px;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`\nconst ToastsList = styled.ul`\n  align-items: center;\n  bottom: 50px;\n  display: flex;\n  flex-direction: column-reverse;\n  left: 0;\n  list-style: none;\n  padding: 10px;\n  position: fixed;\n  width: 100%;\n  z-index: 10;\n`\ntype ToastItemProps = { type: string }\nconst ToastItem = styled.li<ToastItemProps>`\n  display: flex;\n  background: #fff;\n  border: 1px solid ${({ type, theme }) => getTypeColor(type, theme)};\n  border-left: 4px solid ${({ type, theme }) => getTypeColor(type, theme)};\n  border-radius: 4px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.18);\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 10px;\n  min-width: 300px;\n  max-width: 600px;\n  padding: 5px 5px 0 0;\n  width: 100%;\n`\ntype ToastBodyProps = { type: string }\nconst ToastBody = styled.div<ToastBodyProps>`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 4px 0 4px 0;\n  .type-icon {\n    color: ${({ type, theme }) => getTypeColor(type, theme)};\n    margin: 0 15px 0 15px;\n  }\n  .message {\n    color: ${({ type, theme }) => getTypeColor(type, theme)};\n    font-size: ${({ theme }) => theme.fontSize.medium};\n    font-style: bold;\n    margin: 10px 0 10px 0;\n  }\n  .remove-icon {\n    color: ${({ theme }) => theme.color.textDark};\n    cursor: pointer;\n    margin-right: 3px;\n  }\n`\ntype ProgressProps = { type: string, inProgress: boolean, duration: number }\nconst Progress = styled.div<ProgressProps>`\n  background: ${({ type, theme }) => getTypeColor(type, theme)};\n  height: 4px;\n  width: ${({ inProgress }) => inProgress ? '0%' : '100%'};\n  transition: width ${({ duration }) => duration}ms linear 0ms;\n`\n","import * as React from 'react'\nimport { Route, RouteProps, RouteComponentProps } from 'react-router'\nimport styled from '../theme/styled'\n\nimport { NavBar } from './NavBar'\nimport { Toaster } from './Toaster'\n\ninterface IWrappedRoute extends RouteProps {\n  component: React.ComponentClass<any>\n}\n\nconst renderNoMainContainerWrapper = (Component: React.ComponentClass) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <Toaster />\n    <Component {...props}/>\n  </MainWrapper>\n\nconst renderWrapper = (Component: React.ComponentClass) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <Toaster />\n    <MainContainer>\n      <Component {...props}/>\n    </MainContainer>\n  </MainWrapper>\n\nexport const NoMainContainerRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderNoMainContainerWrapper(component)}/>\n\nexport const WrappedRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderWrapper(component)}/>\n\nconst MainWrapper = styled.div`\n`\nconst MainContainer = styled.main`\n  margin: 40px auto 20px auto;\n  max-width: 680px;\n  @media only screen and (max-width: 720px) {\n    margin: 40px 20px 20px 20px;\n  }\n`\n","import * as React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { inject } from 'mobx-react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { Stores } from '../stores'\nimport { AuthStore } from '../stores/AuthStore'\n\ninterface IProps {\n  authStore?: AuthStore\n}\n\n/**\n * Well it looked cool when I first made this...\n * Now I think it's a piece of shit. Opinions change. Too complicated & doesn't work => wasted hours.\n * @param WrappedComponent - Should be React.ComponentType<P> but I don't have time for this type-masturbation\n */\nexport function AuthHOC <P extends IProps>(WrappedComponent: React.ComponentType<any>) {\n  class AuthHOCClass extends React.Component<IProps & RouteComponentProps<any>, {}> {\n    render() {\n      const { location } = this.props\n      return this.props.authStore!.isAuthenticated ?\n        <WrappedComponent {...this.props as P & IProps & RouteComponentProps<any>} /> :\n        <Redirect to={{ pathname: '/login', state: { from: location } }} />\n    }\n  }\n  return inject((stores: Stores) => ({\n    authStore: stores.authStore,\n  }))(AuthHOCClass)\n}\n","import { RefObject, useEffect, useState } from 'react'\n\nconst useClickOutside = (\n    ref : RefObject<HTMLElement | null>,\n    onClickOutside: (event: MouseEvent | TouchEvent) => void,\n    isActive: boolean) => {\n  const [isListening, setListening] = useState(false)\n  const handler = (event: MouseEvent | TouchEvent) => {\n    const { current: el } = ref\n    if (el && event.target && event.target instanceof HTMLElement && !el.contains(event.target)) {\n      onClickOutside(event)\n    }\n  }\n  function addHandlers() {\n    document.addEventListener('mousedown', handler)\n    document.addEventListener('touchstart', handler)\n  }\n  function removeHandlers() {\n    document.removeEventListener('mousedown', handler)\n    document.removeEventListener('touchstart', handler)\n  }\n  useEffect(() => {\n    if (!isListening && isActive) {\n      addHandlers()\n      setListening(true)\n    } else if (isListening && !isActive) {\n      removeHandlers()\n      setListening(false)\n    }\n    return () => {\n      removeHandlers()\n    }\n  }, [ref, !onClickOutside, isActive])\n}\n\nexport default useClickOutside\n","import { useEffect } from 'react'\n\nfunction useScrollLock(isActive: boolean) {\n  function getHtmlElement() {\n    return document.querySelector('html')\n  }\n  useEffect(() => {\n    const htmlElement = getHtmlElement()\n    if (isActive) {\n      htmlElement!.classList.add('scroll-lock')\n    } else {\n      htmlElement!.classList.remove('scroll-lock')\n    }\n  }, [isActive])\n}\n\nexport default useScrollLock\n","import React from 'react'\nimport styled from '../theme/styled'\n\ninterface IProps {\n  className?: string\n  isOpen: boolean\n  body: React.ReactNode\n}\n\nfunction ModalEl(props: IProps) {\n  const { className, isOpen, body } = props\n  return (\n    <div className={`${className} ${!isOpen && 'hidden'}`} role=\"dialog\" aria-modal aria-hidden={!isOpen}>\n      { body }\n    </div>\n  )\n}\n\nexport const Modal = styled(ModalEl)`\n  align-items: center;\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.6) 100%);\n  bottom: 0;\n  display: flex;\n  left: 0;\n  justify-content: center;\n  overflow-y: scroll;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n  &.hidden {\n    display: none;\n    visibility: hidden;\n  }\n`\n","import React from 'react'\nimport styled, { keyframes } from '../theme/styled'\n\ninterface IProps {\n  size: 's' | 'm' | 'l'\n  color?: string\n}\n\nSpinner.defaultProps = {\n  size: 'm'\n}\n\nexport function Spinner(props: IProps) {\n  const { size, color } = props\n  return (\n    <StyledSpinner\n      size={size}\n      color={color}\n    />\n  )\n}\n\nfunction getSize(size: 's' | 'm' | 'l') {\n  switch(size) {\n    case 's':\n      return {\n        borderWidth: '2px',\n        height: '14px',\n        width: '14px',\n      }\n    case 'l':\n      return {\n        borderWidth: '3px',\n        height: '20px',\n        width: '20px',\n      }\n    case 'm':\n    default:\n      return {\n        borderWidth: '3px',\n        height: '16px',\n        width: '16px',\n      }\n  }\n}\n\nconst animationRotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }  100% {\n    transform: rotate(360deg);\n  }\n`\nconst StyledSpinner = styled.div<IProps>`\n  animation: ${ animationRotate } 0.8s infinite linear;\n  border: ${({ theme, color }) => `solid ${color ? theme.color[color] : theme.color.textDark}`};\n  border-right-color: transparent;\n  border-radius: 50%;\n  border-width: ${({ size }) => getSize(size).borderWidth};\n  height: ${({ size }) =>  getSize(size).height};\n  width: ${({ size }) =>  getSize(size).width};\n`\n","import React from 'react'\nimport styled from '../theme/styled'\n\nimport { Spinner } from './Spinner'\n\ninterface IProps {\n  children?: React.ReactNode\n  className?: string\n  intent?: 'primary' | 'secondary'\n  type?: 'button' | 'submit' | 'reset' | 'link'\n  disabled?: boolean\n  href?: string\n  loading?: boolean\n  fullWidth?: boolean\n  onClick?: () => void\n}\n\nfunction ButtonEl(props: IProps) {\n  function handleClick(e: React.MouseEvent) {\n    return !props.disabled && props.onClick && props.onClick()\n  }\n  const { className, children, onClick, type, disabled, loading, href } = props\n  return (\n    <>\n    { type === 'link' ?\n      <a\n        className={className}\n        onClick={onClick}\n        type={type}\n        href={href}\n      >\n        { loading ? <Spinner /> : children }\n      </a> :\n      <button\n        className={className}\n        onClick={handleClick}\n        type={type}\n        disabled={disabled}\n      >\n        { loading ? <Spinner /> : children }\n      </button>\n    }\n    </>\n  )\n}\n\nexport const Button = styled(ButtonEl)<IProps>`\n  align-items: center;\n  background-color: ${({ theme }) => theme.color.secondary };\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  border-radius: 4px;\n  color: ${({ theme }) => theme.color.textDark };\n  cursor: pointer;\n  display: flex;\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  justify-content: center;\n  min-width: 100px;\n  padding: 0.5rem 1.5rem;\n  text-decoration: none;\n  width: ${({ fullWidth }) => fullWidth ? '100%' : ''};\n  &:hover {\n    box-shadow: 3px 3px #039be569;\n  }\n  transition: 0.2s all;\n`\n\nButton.defaultProps = {\n  intent: 'primary',\n  fullWidth: false,\n  type: 'button',\n  disabled: false,\n  loading: false,\n}\n","import React, { useRef } from 'react'\nimport styled from '../theme/styled'\nimport { FiX } from 'react-icons/fi'\n\nimport useClickOutside from '../hooks/useClickOutside'\nimport useScrollLock from '../hooks/useScrollLock'\n\nimport { Modal } from '../elements/Modal'\nimport { Button } from '../elements/Button'\n\ninterface IProps {\n  className?: string\n  isOpen: boolean\n  onClose: () => void\n}\nexport function ExampleModal(props: IProps) {\n  const { className, isOpen } = props\n  function handleClose() {\n    props.onClose()\n  }\n  function doStuff() {\n  }\n  const ref = useRef(null)\n  useClickOutside(ref, (e) => handleClose(), isOpen)\n  useScrollLock(isOpen)\n  return (\n    <Modal className={className}\n      isOpen={isOpen}\n      body={\n        <ModalContainer ref={ref}>\n          <SvgAction className=\"close-icon\" onClick={() => handleClose()}><FiX size={24}/></SvgAction>\n          <SvgWrapper><img src={'grumpy-cat.jpg'} alt=\"Grumpy cat\"/></SvgWrapper>\n          <h2>I am a modal</h2>\n          <Button onClick={doStuff}>I am a button</Button>\n        </ModalContainer>\n      }\n    ></Modal>\n  )\n}\n\nconst ModalContainer = styled.div`\n  align-items: center;\n  background-color: white;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 600px;\n  padding: 20px;\n  text-align: center;\n  width: calc(100% - 20px);\n  .close-icon {\n    align-self: flex-end;\n    position: relative;\n    right: -5px; // Move the icon a little closer the border than the 20px padding allows to look nicer\n    top: -5px;\n  }\n  & > h2 {\n    font-size: 20px;\n    font-weight: 500;\n    margin: 30px 0 30px 0;\n    padding: 0;\n  }\n`\nconst SvgWrapper = styled.span`\n  display: flex;\n  & > img {\n    width: 100%;\n  }\n`\nconst SvgAction = styled.button`\n  background: transparent;\n  border: 0;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  padding: 8px;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react'\nimport styled from '../theme/styled'\nimport { FiChevronDown } from 'react-icons/fi'\n\nimport useClickOutside from '../hooks/useClickOutside'\n\ntype OptionValue = string | number\ntype Option<T extends OptionValue> = {\n  key: string | number\n  value: T\n}\ninterface IProps<T extends OptionValue> {\n  className?: string\n  options: Option<T>[]\n  selected?: T\n  disabled?: boolean\n  required?: boolean\n  placeholder?: string\n  onSelect: (option: Option<T>) => void\n}\n\nDropdownEl.defaultProps = {\n  disabled: false,\n  required: false,\n  placeholder: 'Choose',\n}\n\nfunction DropdownEl<T extends OptionValue>(props: IProps<T>) {\n  const { className, selected, options, placeholder } = props\n\n  function closeMenu() {\n    setMenuOpen(false)\n  }\n  function toggleMenu() {\n    !props.disabled && setMenuOpen(oldMenuOpen => !oldMenuOpen)\n  }\n  function isSelected(option: Option<T>) {\n    return option.value === selected\n  }\n  function getButtonText() {\n    if (selected) {\n      return selected\n    }\n    return placeholder\n  }\n  const selectOption = (option: Option<T>) => (e: React.MouseEvent) => {\n    e.stopPropagation()\n    if (option.value !== selected) {\n      props.onSelect(option)\n      closeMenu()\n    }\n  }\n  const ref = React.useRef(null)\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  useClickOutside(ref, (e) => closeMenu(), menuOpen)\n  return (\n    <div className={className} ref={ref}>\n      <Button onClick={toggleMenu} aria-haspopup aria-label=\"Dropdown menu\">\n        {getButtonText()} \n        <SvgWrapper><FiChevronDown size={18}/></SvgWrapper>\n      </Button>\n      <DropdownList open={menuOpen}>\n      { options.map(o =>\n        <Option\n          key={o.key}\n          tabIndex={0}\n          selected={isSelected(o)}\n          onClick={selectOption(o)}\n        >\n          {o.value}\n        </Option>\n      )}\n      </DropdownList>\n    </div>\n  )\n}\n\nconst SvgWrapper = styled.span`\n  display: flex;\n`\nconst Button = styled.button`\n  align-items: center;\n  background: transparent;\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  border-radius: 26px;\n  cursor: pointer;\n  display: flex;\n  font-size: ${({ theme }) => theme.fontSize.medium};\n  justify-content: center;\n  padding: 0.5rem 0.75rem 0.5rem 1rem;\n  position: relative;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n  & > ${SvgWrapper} {\n    margin-left: 6px;\n  }\n`\ntype DropdownProps = { open: boolean }\nconst DropdownList = styled.ul<DropdownProps>`\n  background-color: #fff;\n  border-color: #b5b5b5;\n  border-radius: .15rem;\n  border-style: solid;\n  border-width: 1px;\n  box-shadow: 1px 1px #b5b5b570;\n  color: ${({ theme }) => theme.color.textDark };\n  display: ${({ open }) => open ? 'block' : 'none'};\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 0;\n  width: 100%;\n  z-index: 10;\n  transform: scale(1, 1) translateZ(0px);\n  transition: opacity 284ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 189ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  top: 0;\n  transform-origin: 251px 0px;\n`\ntype OptionProps = { selected: boolean }\nconst Option = styled.li<OptionProps>`\n  align-items: center;\n  display: flex;\n  background-color: ${({ selected }) => selected ? 'rgba(0, 0, 0, 0.08)' : '#fff'};\n  border-bottom: 1px solid #e5e5e5;\n  border-radius: .15rem;\n  cursor: pointer;\n  padding: .66rem 1rem;\n  transition: all 0.1s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n  z-index: 10;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`\n// export const Dropdown = DropdownEl\n// TODO fix this, using this component in SC does not work eg ${Dropdown}\nexport const Dropdown: new <T>() => React.Component<T> = styled(DropdownEl)`\n  background: transparent;\n  border: 0;\n  display: inline-block;\n  padding: 0;\n  position: relative;\n` as any // as React.ComponentType as new <T>() => GenericComponent<T>\n","import * as React from 'react'\nimport styled from '../theme/styled'\n\ninterface IProps {\n  className?: string\n  value?: string | number\n  type?: 'email' | 'password' | 'text' | 'number' | 'textarea'\n  icon?: React.ReactNode\n  iconPadding?: string\n  fullWidth?: boolean\n  disabled?: boolean\n  placeholder?: string\n  required?: boolean\n  onChange: (value: any) => void // Basically one of: string | number | file\n  onFocus?: () => void\n  onBlur?: () => void\n}\n\nInputEl.defaultProps = {\n  required: false,\n  type: 'text',\n  disabled: false,\n}\n\nfunction InputEl(props: IProps) {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n    !disabled && props.onChange!(event.target.value)\n  }\n  // function handleFocus() {\n  //   props.onFocus!()\n  // }\n  // function handleBlur() {\n  //   props.onBlur!()\n  // }\n  const {\n    className, value, type, icon, iconPadding, placeholder, disabled, required, fullWidth, onFocus, onBlur\n  } = props\n  return (\n    <Container className={className} fullWidth={fullWidth}>\n      { icon }\n      { type === 'textarea' ?\n        <StyledTextarea\n          value={value}\n          placeholder={placeholder}\n          disabled={disabled}\n          required={required}\n          onChange={handleChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        :\n      <StyledInput\n        value={value}\n        type={type}\n        iconPadding={iconPadding}\n        placeholder={placeholder}\n        disabled={disabled}\n        required={required}\n        onChange={handleChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      />\n      }\n    </Container>\n  )\n}\n\ntype ContainerProps = { fullWidth?: boolean }\nconst Container = styled.div<ContainerProps>`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  border-radius: 4px;\n  display: flex;\n  position: relative;\n  width: ${({ fullWidth }) => fullWidth ? '100%' : '180px' };\n  &:focus {\n    background-image: linear-gradient(to right, #cefff8, #729EE74D);\n    color: ${({ theme }) => theme.color.textDark };\n    outline: auto 5px;\n  }\n  & > svg {\n    left: 8px;\n    position: absolute;\n  }\n`\nconst StyledTextarea = styled.textarea`\n  border: 0;\n  border-radius: 4px;\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  height: 100%;\n  min-height: 100px;\n  padding: 0.5rem;\n  width: 100%;\n`\nconst StyledInput = styled.input<IProps>`\n  background-color: ${({ theme }) => theme.color.white };\n  border: 0;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.color.textDark };\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  padding: 0.5rem 0.5rem;\n  padding-left: ${({ iconPadding }) => iconPadding || ''};\n  text-decoration: none;\n  transition: 0.1s all;\n  width: 100%;\n  &:focus {\n    background-image: linear-gradient(to right,#fcffff,#e6f8ff4d);\n    color: ${({ theme }) => theme.color.textDark };\n  }\n`\nexport const Input = styled(InputEl)``\n","import React, { useState } from 'react'\nimport { inject } from 'mobx-react'\nimport styled from '../theme/styled'\n\nimport { ExampleModal } from '../modals/ExampleModal'\n\nimport { Dropdown } from '../elements/Dropdown'\nimport { Input } from '../elements/Input'\nimport { Button } from '../elements/Button'\n\nimport { ToastStore } from '../stores/ToastStore'\n\ninterface IProps {\n  toastStore?: ToastStore\n}\nexport const ShowcaseComponents = inject('toastStore')(function ShowcaseComponents(props: IProps) {\n  function handleSelect(option: { key: string | number, value: string }) {\n    toastStore!.createToast('You selected something', 'warning')\n    setSelectedOption(option.value)\n  }\n  function handleTextChange(val: any) {\n    setText(val)\n  }\n  function handleModalOpen() {\n    toastStore!.createToast('You opened modal')\n    setModalOpen(true)\n  }\n  function handleModalClose() {\n    toastStore!.createToast('You closed modal', 'info')\n    setModalOpen(false)\n  }\n  const { toastStore } = props\n  const [selectedOption, setSelectedOption] = useState('')\n  const [modalOpen, setModalOpen] = useState(false)\n  const [text, setText] = useState('')\n  const dropdownOptions = [{ key: 'a', value: 'Option1'}, { key: 'b', value: 'Option2'}]\n  return (\n    <>\n      <ExampleModal isOpen={modalOpen} onClose={handleModalClose}/>\n      <Container>\n        <Dropdown\n          options={dropdownOptions}\n          selected={selectedOption}\n          onSelect={handleSelect}\n        />\n        <Input\n          type=\"textarea\"\n          placeholder=\"Write text\"\n          fullWidth\n          value={text}\n          onChange={handleTextChange}\n        />\n        <Button onClick={handleModalOpen}>Open modal</Button>\n        <br/>\n        <Button loading>Loading</Button>\n      </Container>\n    </>\n  )\n})\n\nconst Container = styled.div`\n  height: 800px;\n  & > ${Input} {\n    margin-bottom: 15px;\n    margin-top: 15px;\n  }\n`\n","import React from 'react'\nimport { inject } from 'mobx-react'\nimport styled from '../theme/styled'\n\nimport { ShowcaseComponents } from '../components/ShowcaseComponents'\n\nimport { Stores } from '../stores'\nimport { AuthStore } from '../stores/AuthStore'\n\ninterface IProps {\n  authStore?: AuthStore,\n}\n\n@inject((stores: Stores) => ({\n  authStore: stores.authStore,\n}))\nexport class FrontPage extends React.PureComponent<IProps> {\n  render() {\n    const { loggedInUser } = this.props.authStore!\n    return (\n      <Container>\n        <header>\n          <h1>Hi there!</h1>\n        </header>\n        <p>\n          This is my example React bootstrap. Aasdf.\n        </p>\n        { !loggedInUser.name ?\n        <p><u>You are not logged in.</u></p> :\n        <div>\n          <p><u>Name</u>: {loggedInUser.name}</p>\n          <p><u>Email</u>: {loggedInUser.email}</p>\n          <p><u>Privileges</u>: {loggedInUser.privileges}</p>\n        </div>\n        }\n        <ShowcaseComponents />\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n`\n","import React, { useEffect, useState } from 'react'\nimport { inject } from 'mobx-react'\nimport styled from '../theme/styled'\nimport { MdEmail, MdLock } from 'react-icons/md'\n\nimport { Button } from '../elements/Button'\nimport { Input } from '../elements/Input'\n\nimport { Stores } from '../stores'\nimport { AuthStore } from '../stores/AuthStore'\nimport { ILoginCredentials } from '../types/user'\nimport { RouteComponentProps } from 'react-router'\n\ninterface IProps extends RouteComponentProps<{}> {\n  authStore?: AuthStore,\n}\ninterface IState {\n  defaultValues: ILoginCredentials\n}\n\n@inject((stores: Stores) => ({\n  authStore: stores.authStore,\n}))\nexport class LoginPage extends React.Component<IProps, IState> {\n  state = {\n    defaultValues: {\n      email: '',\n      password: '',\n    }\n  }\n  componentDidMount() {\n    if (this.props.authStore!.isAuthenticated) {\n      this.props.history.push(this.props.location.pathname)\n    }\n  }\n  handleLoginSubmit = async (values: ILoginCredentials) => {\n    const success = await this.props.authStore!.logInUser(values)\n    if (success) {\n      this.props.history.push('')\n    }\n  }\n  handleSetDefaultValues = (type: 'admin' | 'user') => () => {\n    let newValues: ILoginCredentials\n    if (type === 'admin') {\n      newValues = {\n        email: 'admin@asdf.fi',\n        password: 'qwertyui',\n      }\n    } else {\n      newValues = {\n        email: 'morty@asdf.fi',\n        password: 'asdfasdf',\n      }\n    }\n    this.setState((oldState) => ({ ...oldState, defaultValues: newValues }))\n  }\n  render() {\n    const { defaultValues } = this.state\n    return (\n      <section>\n        <ShortcutButtonsContainer>\n          <Button onClick={this.handleSetDefaultValues('admin')}>Admin login</Button>\n          <Button onClick={this.handleSetDefaultValues('user')}>User login</Button>\n        </ShortcutButtonsContainer>\n        <LoginFormEl defaultValues={defaultValues} onSubmit={this.handleLoginSubmit}/>\n      </section>\n    )\n  }\n}\n\ninterface IFormProps {\n  defaultValues: ILoginCredentials\n  onSubmit: (formValues: ILoginCredentials) => void\n}\nfunction LoginFormEl(props: IFormProps) {\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault()\n    const values = {\n      email,\n      password\n    } as ILoginCredentials\n    onSubmit(values)\n  }\n  const { defaultValues, onSubmit } = props\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  useEffect(() => {\n    setEmail(defaultValues.email)\n    setPassword(defaultValues.password)\n  }, [defaultValues])\n  return (\n    <LoginForm onSubmit={handleSubmit}>\n      <LoginField>\n        <label htmlFor=\"email\">Email</label>\n        <Input required placeholder={'Email'}\n          type=\"email\" icon={<MdEmail size={24}/>} iconPadding=\"38px\" fullWidth\n          value={email}\n          onChange={val => setEmail(val)}/>\n      </LoginField>\n      <LoginField>\n        <label htmlFor=\"password\">Password</label>\n        <Input required type=\"password\" icon={<MdLock size={24}/>} iconPadding=\"38px\" fullWidth\n          value={password}\n          onChange={val => setPassword(val)}/>\n      </LoginField>\n      <Button type=\"submit\">Submit</Button>\n    </LoginForm>\n  )\n}\n\nconst ShortcutButtonsContainer = styled.div`\n  display: flex;\n  ${Button} {\n    margin-right: 1rem;\n  }\n`\nconst LoginForm = styled.form`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 100px 150px 150px 150px;\n  ${Button} {\n    margin-top: 20px;\n    max-width: 240px;\n    width: 240px;\n  }\n`\nconst LoginField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  width: 240px;\n`\n","import * as React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from '../theme/styled'\n\n// import { ErrorOrSpinner } from '../components/ErrorOrSpinner'\n\nimport { Stores } from '../stores'\nimport { UserStore } from '../stores/UserStore'\nimport { IUser } from '../types/user'\n\ninterface IProps {\n  userStore?: UserStore,\n}\n\n@inject((stores: Stores) => ({\n  userStore: stores.userStore,\n}))\n@observer\nexport class UsersPage extends React.Component<IProps> {\n  componentDidMount() {\n    this.props.userStore!.getUsers()\n  }\n  render() {\n    const { users, loading } = this.props.userStore!\n    return (\n      <Container>\n        <header>\n          <h1>Users</h1>\n        </header>\n        { loading ? 'Loading' :\n        <UsersList>\n          { users.map((user: IUser, i: number) =>\n          <UsersListItem key={i}>\n            <p>Name: {user.name}</p>\n            <p>Email: {user.email}</p>\n          </UsersListItem>\n          )}\n        </UsersList>\n        }\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n`\nconst UsersList = styled.ul`\n`\nconst UsersListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 10px 0;\n  & > p {\n    margin: 0 10px 0 0;\n  }\n`\n","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'mobx-react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { Stores } from './stores'\nimport { confMobx } from './stores/mobxConf'\n\nimport { defaultTheme } from './theme/defaultTheme'\nimport { GlobalStyle } from './theme/GlobalStyle'\n\nimport { Routes } from './routes'\n\nconfMobx()\n\nexport const stores = new Stores()\n\nrender(\n  <Provider {...stores}>\n    <ThemeProvider theme={defaultTheme}>\n      <>\n        <Routes />\n        <GlobalStyle />\n      </>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n","import { AuthStore } from './AuthStore'\nimport { UserStore } from './UserStore'\nimport { ToastStore } from './ToastStore'\n\nexport class Stores {\n  authStore: AuthStore\n  userStore: UserStore\n  toastStore: ToastStore\n\n  constructor() {\n    this.authStore = new AuthStore()\n    this.userStore = new UserStore()\n    this.toastStore = new ToastStore()\n  }\n}\n","import { ITheme } from '../types/theme'\n\nexport const defaultTheme : ITheme = {\n  color: {\n    bg: '#fff',\n    gray: '#aaa',\n    grayLight: '#eee',\n    primary: '#1d9eff',\n    green: '#5B9C2D',\n    blue: '#425EC2',\n    red: '#ff5d5d',\n    orange: '#EF7F00',\n    secondary: '#ebf6ff',\n    textLight: '#666',\n    textDark: '#222',\n    white: '#fff',\n    yellow: 'yellow',\n  },\n  fontSize: {\n    small: '14px',\n    medium: '16px',\n    large: '24px',\n    xlarge: '40px',\n    largeIcon: '50px'\n  },\n  font: {\n    text: '\\'Raleway\\', sans-serif',\n  },\n  transitions: {\n    bezier: 'cubic-bezier(0.55, 0.085, 0.68, 0.53)',\n  }\n}\n","import * as React from 'react'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport { WrappedRoute } from './components/WrappedRoute'\nimport { AuthHOC } from './components/AuthHOC'\n\nimport { FrontPage } from './pages/FrontPage'\nimport { LoginPage } from './pages/LoginPage'\nimport { UsersPage } from './pages/UsersPage'\n\nexport const Routes = () : React.ReactElement<any> => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <WrappedRoute exact path=\"/\" component={FrontPage}/>\n      <WrappedRoute exact path=\"/login\" component={LoginPage}/>\n      <WrappedRoute exact path=\"/users\" component={AuthHOC(UsersPage)}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n)\n"],"sourceRoot":""}